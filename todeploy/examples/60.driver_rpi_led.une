#==================================================================================================================================
# This example turns on and off a LED every second.
# This example assumes that there is a LED properly connected to PIN 5 (using WiringPi numbering instead of BMC).
# Refer to example: 02.rules_basics.une
#
# For more information about Drivers, pleaser refer to the "Mingle Standard Platform" handbook.
#
# NOTE: This driver relays in a Controller that uses WinringPi C lib (via JNA). Unfortunately its author (Gordon Henderson)
#       discontinued the project (due mainly to a bunch of nasty people). Fortunately other people continued it.
#       This driver does not include all features available in WiringPi: only DIGITAL and ANALOG, INPUT and OUTPUT.
#       This driver allow to choose either WiringPi or BCM numbering model (selectable at 'config.json' file).
#
# How to install the latest (unofficial) build of WiringPi:
#    1. Download from https://github.com/WiringPi/WiringPi: "wiringpi-{version}-armhf.deb" or "wiringpi-{version}-arm64.deb"
#    3. Uninstall current version (if any): sudo apt-get remove wiringpi -y
#    4. Install the provided version: sudo dpkg -i {file}.deb
#    5. Check this file exists: '/usr/lib/libwiringPi.so'
#    6. At command line, to check that it works properly, execute: gpio -v
#
# ---------------------------------------------------------------------------------------------------------------------------------
# This file is part of the Mingle project, which is licensed under Apache 2.0 License
#
# @author : Francisco JosÃ© Morero Peyrona
# @project: https://github.com/peyrona/mingle
#==================================================================================================================================

DEVICE clock
    DRIVER ClockDriver
        CONFIG
            interval SET 1s


DEVICE led
    DRIVER RPiGpioDriver
        CONFIG
            pin  SET 22           # WiringPi 3, BCM 22
            type SET "digital"
            mode SET "output"


WHEN clock ABOVE 0                # This condition is always true
THEN led SET NOT led              # Sets the led to its opposite state

# >>>>>>>>>>>>>> EOF <<<<<<<<<<<<<<<<